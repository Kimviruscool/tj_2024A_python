#day19 > 1_분석평가지표

'''
회귀분석 : 변수들간의 인과 관계 파악/분석
    종속 변수가 독립 변수의 변화에 따라 어떻게 변화 하는지 예측
    통계학 , 머신러닝

머신러닝 : 입력된 데이터에서 스스로 패턴을 찾아 학습하여 새로운 지식을 만들고 예측하는 통찰(인사이트) 을 제공 분야
    절차/프로세스 : 1. 데이터수집 2. 데이터 전처리 3.모델구축및학습 4.모델평가 5.예측
    회귀 분석 결과에 대한 평가 지표
        1. MAE : Mean Absolute Error  평균 절대 오차
            - 예측값과 실제값 사이의 절대 차이를 구하고 평균을 계산하는 방식
                1. 절대 차이 계산 : 예측값 과 실제 값 차이의 절대 값
                    - 예를  들어 실제 값이 -0.5 이고 예측값이 0일때 0.5
                2. 평균 계산
                    - 모든 절대 차이의 평균을 구한다.
                    
        2. MSE : Mean Squared Error , 평균 제곱 오차
            모델의 예측 값과 실제 값의 차이를 제곱하여 평균을 구하는 방식
                1. 오차 계산 : 예측값 과 실제 값의 차이 #차이를 오차(error) 라고 부른다
                    예를 들어 실제값이 3 이고 예측값이 2.5 이라면 오차는 3 - 2.5 = 0.5이다.
                2. 제곱 : 각 오차를 제곱하여 양수로 변환 #제곱하는 이유 : 오차으,ㅣ 부호가 문제되지 않도록 하기 위해 # 오차에 더 큰 패널티 주기 위함
                    예를 들어 오차가 2일 경우 제곱 오차는 4 오차가 0.5일경우 제곱 오차는 0.25
                3. 평균 계산 : 모든 제곱 오차의 평균을 구한다.
                    예를 들어 제곱 오차가 4, 9 , 1 이라면 4+9+1/3 = 4.67

                MSE가 작을수록 모델의 예측이 실제 값에 가까워진다.
        3. RMSE : Root Mean Squared Error , 루트 평균 제곱 오차
                Mse 의 제곱근으로 게산 하는 방식 #해석이 직관적이다.
                1. MSE계산  위와 동일
                2. 제곱근 계산 : MSE의 제곱근을 구한다 . 오차의 단위가 원래 단위로 변환 하는 과정이다.
                
                MSE와 RMSE 차이점
                
        4. R²(결정계수)[R-Squared]!!! :
                - 모델이 데이터의 변동성이 얼마나 잘 설명 하는지 나타나는 방법
                    #예측럭이 얼마나 강력한지 측정
                    #값은 0에서 1사이
                    1. 총 변동성 ( Total sum of squared , SST)
                        데이터의 실제 값이 평균값과 얼마나 차이가 나는지 측정 계산

                    2. 잔차(오차,차이)의 변동성( Residual sum of Squares, SSE)
                        모델의 예측 값과 실제 값 사이의 차이를 측정 계산

                    3. 설명된 변동성
                        모델이 설명할 수 있는 변동성의 양 측정 (SST - SSE)

                - 1에 가까울 수록 모델이 데이터를 잘 설명 하고 있다. 잘 예측 하고 있다.
                - 0에 가까울 수록 모델이 예측에 대한 설명력이 전혀 없다고 의미를 갖는다.
                - 고려할점
                    1. 모델의 복잡성을 고려하지 않고, 다른 지표와 함께 고려 해야한다.
'''
#[1] 평가지표 MSE
실제값 = [3, -0.5, 2, 7]
예측값 = [2.5, 0.0, 2, 8]

# 0.5/-0.5/0/-1
# 0.25/0.25/0/1
# 0.375

#계산
from sklearn.metrics import mean_squared_error #scikit-learn
mse = mean_squared_error(실제값,예측값)
print(mse) #0.375

# [2] 평가 지표 RSME
import numpy as np #수학적 공식 제공 라이브러리
# 2. 모델 평가
RMSE = np.sqrt(mse) #sqrt 제곱근 함수
print(RMSE) #0.6123724356957945
'''
MSE 계산 결과 : 0.375 
RMSE(제곱근) 계산 결과 : 0.6123724356957945

-MSE 와 RMSE 
    - 모델의 성능을 평가 하기 위해 사용되는 두가지 오차(잔차) 측정 지표
    - 오차가 작을 수록 예측 모델의 성능이 좋다는 것을 의미한다.
    
    - 단위 : 
            MSE는 제곱 단위로 표현 , 원래 데이터 단위와 다르다.
            RMSE는 원래 데이터 단위와 동일 하므로 해석이 직관적 이다.
            
    - 해석 : 
            MSE는 오차의 제곱 평균 으로 , 수학적 편리함 제공한다.
            RMSE는 예측 오차의 평균적인 크기를 원래 단위로 제공한다.(해석이 직관적이다.)
            
'''
#[3] 평가 지표 , 결정개수 R-S (R²)
#2. 모델평가
from sklearn.metrics import r2_score
R2 = r2_score(실제값 , 예측값)
print(R2) #0.9486081370449679
#1에 가까울 수록 모델을 잘 예측 하고 있다.
'''
1. 실제 값의 평균 계산
11.5/4 = 2.875

2. SSE(잔차 변동성) 계산
오차1 = 3 - 2.5 = 0.5 : 0.25 +
''2 = -0.5 :           0.25 +
''3 = 0 :              0 +
''4 = -1 :             1 
                     = 1.5

3. SST(총 변동성 ) 계산 , 차이의 제곱 합            (실제 값의 분산)
변동1 3 - 2.875 = 0.125 >                         0.0156
''2 -0.5 - 2.875 = -3.375 >                     11.3
''3 2 - 2.875 = -0.875 >                         0.765
''4 7 - 2.875 = 4.125 >                         17.0156
                                            =   29.1874
                                            
R = 1- SSE/SST = 
    1 - (29.1874(분모)/1.5(분자)) = 0.0514(결과) = 0.9486(백분율) 
'''

#[4] 평가 지표 , MAE
from sklearn.metrics import mean_absolute_error
MAE = mean_absolute_error(실제값 , 예측값)
print(MAE) #0.5
